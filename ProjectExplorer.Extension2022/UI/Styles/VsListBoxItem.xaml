<ResourceDictionary xmlns         = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x       = "http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utils   = "clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
                    xmlns:vsui    = "clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:local   = "clr-namespace:IInspectable.ProjectExplorer.Extension.UI">

    <utils:BrushToColorConverter x:Key="BrushToColorConverter" x:Uid="BrushToColorConverter_1" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMouseOverBackgroundBeginColorKey}}"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border"     Color="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMouseOverBackgroundBeginColorKey}}"/>
    <SolidColorBrush x:Key="Item.MouseOver.Foreground" Color="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarTextHoverColorKey}}"/>

    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemInactiveColorKey}}"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border"     Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemInactiveColorKey}}"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Foreground" Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemInactiveTextColorKey}}"/>
    
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveColorKey}}"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border"     Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveColorKey}}"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Foreground" Color="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveTextColorKey}}"/>
    
    <Style TargetType="{x:Type local:VsListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"   Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"  Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            <Setter Property="TextElement.Foreground"      Value="{StaticResource Item.SelectedInactive.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            <Setter Property="TextElement.Foreground"      Value="{StaticResource Item.SelectedActive.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected"  Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground"      Value="{StaticResource Item.MouseOver.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected"  Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            <Setter Property="TextElement.Foreground"      Value="{StaticResource Item.SelectedActive.Foreground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>